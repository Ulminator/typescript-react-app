{
  "swagger": "2.0",
  "x-google-allow": "all",
  "info": {
    "title": "Typescript React App",
    "version": "v1",
    "description": "Full stack Node.js application on App Engine using CircleCI."
  },
  "schemes": ["https"],
  "paths": {
    "/api/users/{userId}/post": {
      "post": {
        "operationId": "create-post",
        "tags": ["user-resource"],
        "consumes": "x-www-form-urlencoded",
        "description": "Provide a post title, imageId, and content of a comment to create a post for user ID.",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "number"
          },
          {
              "name": "title",
              "in": "formData",
              "required": true,
              "type": "string"
          },
          {
            "name": "imageId",
            "in": "formData",
            "required": true,
            "type": "string"
          },
          {
            "name": "content",
            "in": "formData",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Post Created"
          },
          "500": {
            "description": "Query Error"
          }
        }
      }
    },
    "/api/posts/{postId}/comment": {
      "post": {
        "operationId": "create-comment",
        "tags": ["post-resource"],
        "description": "Provide a userId and the content of a comment to create a comment.",
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "formData",
            "required": true,
            "type": "string"
          },
          {
            "name": "content",
            "in": "formData",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Comment Created"
          },
          "500": {
            "description": "Query Error"
          }
        }
      }
    },
    "/api/posts": {
      "get": {
        "operationId": "get-posts",
        "tags": ["post-resource"],
        "description": "Get all posts.",
        "parameters": [
          {
            "name": "include",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "required": false,
              "enum": ["id", "title", "image_id", "created_at"]
            },
            "description": "Only includes these attributes of the post in the query."
          }
        ],
        "responses": {
          "200": {
            "description": "All posts found and returned."
          },
          "404": {
            "description": "No posts exist."
          }
        }
      }
    },
    "/api/posts/{postId}": {
      "get": {
        "operationId": "get-post",
        "tags": ["post-resource"],
        "description": "Gets a post by post id.",
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "required": false,
              "enum": ["id", "title", "image_id", "created_at"]
            },
            "description": "Only includes these attributes of the post in the query."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["comments"],
            "description": "Deeply expands the comment section including replies."
          }
        ],
        "responses": {
          "200": {
            "description": "Post found and returned."
          },
          "404": {
            "description": "Post with that ID does not exist."
          }
        }
      }
    },
    "/api/comments/{commentId}/reply": {
      "post": {
        "operationId": "create-reply",
        "tags": ["comment-resource"],
        "description": "Creates a reply by userId and content of the reply for comment id.",
        "parameters": [
          {
            "name": "commentId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "formData",
            "required": true,
            "type": "string"
          },
          {
            "name": "content",
            "in": "formData",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Reply Created"
          },
          "500": {
            "description": "Query Error"
          }
        }
      }
    },
    "/api/comments/{commentId}": {
      "get": {
        "operationId": "get-comment",
        "tags": ["comment-resource"],
        "description": "Gets a comment by comment ID.",
        "parameters": [
          {
            "name": "commentId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "required": false,
              "enum": ["id", "content", "created_at"]
            },
            "description": "Only includes these attributes of the comment in the query."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "required": false,
              "enum": ["user", "replies"]
            },
            "description": "Deeply expands the replies section and/or expands the user of the comment."
          }
        ],
        "responses": {
          "200": {
            "description": "Comment found and returned."
          },
          "404": {
            "description": "Comment with that ID does not exist."
          }
        }
      }
    },
    "/api/replies/{replyId}": {
      "get": {
        "operationId": "get-reply",
        "tags": ["reply-resource"],
        "description": "Gets a reply by reply ID.",
        "parameters": [
          {
            "name": "replyId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "required": false,
              "enum": ["id", "content", "created_at"]
            },
            "description": "Only includes the attributes of the reply in the query."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["user"],
            "description": "Deeply expands the user section including reply."
          }
        ],
        "responses": {
          "200": {
            "description": "Reply found and returned."
          },
          "404": {
            "description": "Reply with that ID does not exist."
          }
        }
      }
    }
  }
 }